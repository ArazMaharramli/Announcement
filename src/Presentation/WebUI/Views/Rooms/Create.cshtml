@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@model Application.CQRS.Rooms.Commands.Create.CreateRoomCommand
@{
    ViewData["Title"] = Localizer["Create Room"];
    ViewData["Description"] = "";
    ViewData["Keywords"] = "";
}

@section Styles{
    <link href="assets/css/pages/wizard/wizard-3.css" rel="stylesheet" type="text/css" />
    <link href="assets/plugins/custom/uppy/uppy.bundle.css" rel="stylesheet" type="text/css" />

}

@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD1uU_tT63977_KyXVILofNxnKlLdA32go&libraries=places&callback=initMap&v=weekly" async></script>

    <script async>
        let infoWindow, marker, autocomplete;
        function setMarker(location, setcenter = true) {
            if (setcenter) {
                map.setCenter(location);
            }
            if (marker != null) {
                marker.setPosition(location);
                $('#longtitudeInput').val(location.lng);
                $('#latitudeInput').val(location.lat);
            }
        }

        async function getUserLocationFromGPS() {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                    pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude,
                    };
                    setMarker(pos);
                    console.log(position);
                },
                (err) => {
                }
            );
        }
        async function getUserLocation() {

               var loc = await $.ajax({
                   url: "https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyCdVSHqtbLoxPRa5o35dyisKmSfHHgM0UI",
                   type: 'POST'
               });
               @*console.log(loc);*@
               setMarker(loc.location);

        }
        function initSearchBox() {
            var input = document.getElementById("addressinput");
            // Create the search box and link it to the UI element.
            @*const input = document.getElementById("pac-input");*@
            const searchBox = new google.maps.places.SearchBox(input);
            map.controls.push(input);
            // Bias the SearchBox results towards current map's viewport.
            map.addListener("bounds_changed", () => {
                searchBox.setBounds(map.getBounds());
            });
            // Listen for the event fired when the user selects a prediction and retrieve
            // more details for that place.
            searchBox.addListener("places_changed", () => {
                const places = searchBox.getPlaces();
                if (places.length == 0) {
                    return;
                }
                // For each place, get the icon, name and location.
                const bounds = new google.maps.LatLngBounds();
                places.forEach((place) => {
                    if (!place.geometry || !place.geometry.location) {
                        console.log("Returned place contains no geometry");
                        return;
                    }
                    setMarker(place.geometry.location)
                    console.log(place);
                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
        }
        function fillInAddress(){
            const place = autocomplete.getPlace();
            console.log(place);
        }
        function initMap() {
            var loc = { lat: 40, lng: 49 }
            getUserLocation();
            // The map, centered at user location
            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 15,
                center: loc,
                gestureHandling: "greedy",
                zoomControl: false,
            });
            map.addListener("click", (mapsMouseEvent) => {
                setMarker(mapsMouseEvent.latLng, false);
                @*console.log(mapsMouseEvent);*@
            });
            marker = new google.maps.Marker({
                position: loc,
                map: map,
            });
            initSearchBox();
        }
    </script>
    <script async>// Class definition
        "use strict";
        // Class definition
        var KTWizard3 = function () {
            // Base elements
            var _wizardEl;
            var _formEl;
            var _wizardObj;
            // Private functions
            var _initWizard = function () {
                // Initialize form wizard
                _wizardObj = new KTWizard(_wizardEl, {
                    startStep: 1, // initial active step number
                    clickableSteps: true  // allow step clicking
                });
                // Validation before going to next page
                _wizardObj.on('change', function (wizard) {
                    if (wizard.getStep() > wizard.getNewStep()) {
                        return; // Skip if stepped back
                    }
                    wizard.goTo(wizard.getNewStep());
                    KTUtil.scrollTop();
                    return false;  // Do not change wizard step, further action will be handled by he validator
                });
                // Changed event
                _wizardObj.on('changed', function (wizard) {
                    KTUtil.scrollTop();
                });
                // Submit event
                _wizardObj.on('submit', function (wizard) {
                    _formEl.submit(); // submit form
                });
            }
            return {
                // public functions
                init: function () {
                    _wizardEl = KTUtil.getById('kt_wizard_v3');
                    _formEl = KTUtil.getById('kt_form');
                    _initWizard();
                }
            };
        }();
        jQuery(document).ready(function () {
            KTWizard3.init();
        });</script>

    <script async>$('#CategoryId').select2({
            placeholder: "Select a value",
        });
        $.ajax({
            url: "/rooms/categories",
            type: 'GET',
            success: function (res) {
                res.forEach(function (data, index, arr) {
                    var newOption = new Option(data.name, data.id, false, false);
                    $("#CategoryId").append(newOption);
                });
                $("#CategoryId").trigger('change');
            }
        });

        function template(strings, ...keys) {
            return (function (...values) {
                let dict = values[values.length - 1] || {};
                let result = [strings[0]];
                keys.forEach(function (key, i) {
                    let value = Number.isInteger(key) ? values[key] : dict[key];
                    result.push(value, strings[i + 1]);
                });
                return result.join('');
            });
        }

        var amenitieAndRequirementOption = template` <div class="col-lg-4">
                                                                                                                                                                                                                                                    <label class="option">
                                                                                                                                                                                                                                                      <span class="option-control">
                                                                                                                                                                                                                                                          <span class="checkbox checkbox-outline checkbox-success">
                                                                                                                                                                                                                                                              <input type="checkbox" name="${'inputName'}" value="${'id'}" checked="checked" />
                                                                                                                                                                                                                                                              <span></span>
                                                                                                                                                                                                                                                          </span>
                                                                                                                                                                                                                                                      </span>
                                                                                                                                                                                                                                                      <span class="option-label">
                                                                                                                                                                                                                                                          <span class="option-head">
                                                                                                                                                                                                                                                              <span class="option-title">
                                                                                                                                                                                                                                                  ${'title'}
                                                                                                                                                                                                                                                              </span>
                                                                                                                                                                                                                                                          </span>
                                                                                                                                                                                                                                                          <span class="option-body">
                                                                                                                                                                                                                                             ${'decription'}
                                                                                                                                                                                                                                                          </span>
                                                                                                                                                                                                                                                      </span>
                                                                                                                                                                                                                                                  </label >
                                                                                                                                                                                                                                              </div >`;

        $.ajax({
            url: "/rooms/amenities",
            type: 'GET',
            success: function (res) {
                res.forEach(function (data, index, arr) {
                    var newOption = amenitieAndRequirementOption({
                        inputName: "AmenitieIds",
                        id: data.id,
                        title: data.name,
                        decription: ''
                    });

                    $("#Amenities").append(newOption);
                });
                $("#Amenities").trigger('change');
            }
        });

        $.ajax({
            url: "/rooms/requirements",
            type: 'GET',
            success: function (res) {
                res.forEach(function (data, index, arr) {
                    var newOption = amenitieAndRequirementOption({
                        inputName: "RequirementIds",
                        id: data.id,
                        title: data.name,
                        decription: ''
                    });

                    $("#Requirements").append(newOption);
                });
                $("#Requirements").trigger('change');
            }
        });</script>

    <script src="assets/plugins/custom/uppy/uppy.bundle.js"></script>
    <script>var mediaUrls = [];
        const Tus = Uppy.XHRUpload;
        const ProgressBar = Uppy.ProgressBar;
        const StatusBar = Uppy.StatusBar;
        const FileInput = Uppy.FileInput;
        const Informer = Uppy.Informer;

        var id = '#kt_uppy_3';

        var uppyDrag = Uppy.Core({
            autoProceed: true,
            restrictions: {
                maxFileSize: 2000000, // 1mb
                maxNumberOfFiles: 10,
                minNumberOfFiles: 1,
                allowedFileTypes: ['image/*', 'video/*']
            }
        });

        uppyDrag.use(Uppy.DragDrop, { target: id + ' .uppy-drag' });
        uppyDrag.use(ProgressBar, {
            target: id + ' .uppy-progress',
            hideUploadButton: false,
            hideAfterFinish: false
        });

        uppyDrag.use(Informer, { target: id + ' .uppy-informer' });
        uppyDrag.use(Tus, {
            endpoint: '/files/upload',
        });

        uppyDrag.on('complete', function (file) {
            var imagePreview = "";
            $.each(file.successful, function (index, value) {
                var imageType = /image/;
                var thumbnail = "";
                if (imageType.test(value.type)) {
                    thumbnail = '<div class="uppy-thumbnail"><img src="' + value.uploadURL + '"/></div>';
                    mediaUrls.push(value.uploadURL);
                    console.log(mediaUrls);
                }
                var sizeLabel = "bytes";
                var filesize = value.size;
                if (filesize > 1024) {
                    filesize = filesize / 1024;
                    sizeLabel = "kb";
                    if (filesize > 1024) {
                        filesize = filesize / 1024;
                        sizeLabel = "MB";
                    }
                }
                imagePreview += '<div class="uppy-thumbnail-container" data-id="' + value.id + '">' + thumbnail + ' <span class="uppy-thumbnail-label">' + value.name + ' (' + Math.round(filesize, 2) + ' ' + sizeLabel + ')</span><span data-id="' + value.id + '" class="uppy-remove-thumbnail"><i class="flaticon2-cancel-music"></i></span></div>';
            });

            $(id + ' .uppy-thumbnails').append(imagePreview);
        });

        $(document).on('click', id + ' .uppy-thumbnails .uppy-remove-thumbnail', function () {
            var imageId = $(this).attr('data-id');
            var container = $(id + ' .uppy-thumbnail-container[data-id="' + imageId + '"');
            var imgUrl = '';
            var img = container.find("img"), // select images inside .container
                len = img.length; // check if they exist
            if (len > 0) {
                // images found, get id
                imgUrl = img.first().attr("src"); // get id of first image
            } else {
                // images not found
            }

            uppyDrag.removeFile(imageId);
            container.remove();
            console.log(imgUrl);
            mediaUrls = mediaUrls.filter(function (ele) {
                return ele != imgUrl;
            });
            console.log(mediaUrls);
        });</script>
}


<!--begin: Wizard-->
<div class="wizard wizard-3" id="kt_wizard_v3" data-wizard-state="step-first" data-wizard-clickable="true">
    <!--begin: Wizard Nav-->
    <div class="wizard-nav">
        <div class="wizard-steps px-8 py-8 px-lg-15 py-lg-3">
            <!--begin::Wizard Step 1 Nav-->
            <div class="wizard-step" data-wizard-type="step" data-wizard-state="current">
                <div class="wizard-label">
                    <h3 class="wizard-title">
                        <span>1.</span>Setup Location
                    </h3>
                    <div class="wizard-bar"></div>
                </div>
            </div>
            <!--end::Wizard Step 1 Nav-->
            <!--begin::Wizard Step 2 Nav-->
            <div class="wizard-step" data-wizard-type="step">
                <div class="wizard-label">
                    <h3 class="wizard-title">
                        <span>2.</span>Enter Details
                    </h3>
                    <div class="wizard-bar"></div>
                </div>
            </div>
            <!--end::Wizard Step 2 Nav-->
            <!--begin::Wizard Step 3 Nav-->
            <div class="wizard-step" data-wizard-type="step">
                <div class="wizard-label">
                    <h3 class="wizard-title">
                        <span>3.</span>Select Services
                    </h3>
                    <div class="wizard-bar"></div>
                </div>
            </div>
            <!--end::Wizard Step 3 Nav-->
            <!--begin::Wizard Step 4 Nav-->
            <div class="wizard-step" data-wizard-type="step">
                <div class="wizard-label">
                    <h3 class="wizard-title">
                        <span>4.</span>Delivery Address
                    </h3>
                    <div class="wizard-bar"></div>
                </div>
            </div>
            <!--end::Wizard Step 4 Nav-->
        </div>
    </div>
    <!--end: Wizard Nav-->
    <!--begin: Wizard Body-->
    <div class="row justify-content-center py-10 px-8 py-lg-12 px-lg-10">
        <div class="col-xl-12 col-xxl-7">
            <!--begin: Wizard Form-->
            <form class="form" id="kt_form" method="post">
                <!--begin: Wizard Step 1-->
                <div class="pb-5" data-wizard-type="step-content" data-wizard-state="current">
                    <h4 class="mb-10 font-weight-bold text-dark">Setup Your Current Location</h4>
                    <!--begin::Input-->
                    <div class="form-group">
                        <div class="input-group">
                            <input id="addressinput" asp-for="Address" class="form-control" aria-label="Search address" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-outline-secondary" onclick="getUserLocationFromGPS()">
                                    <span class="svg-icon svg-icon-primary">
                                        <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo5/dist/../src/media/svg/icons/Map/Position.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                <rect x="0" y="0" width="24" height="24" />
                                                <path d="M19,11 L21,11 C21.5522847,11 22,11.4477153 22,12 C22,12.5522847 21.5522847,13 21,13 L19,13 C18.4477153,13 18,12.5522847 18,12 C18,11.4477153 18.4477153,11 19,11 Z M3,11 L5,11 C5.55228475,11 6,11.4477153 6,12 C6,12.5522847 5.55228475,13 5,13 L3,13 C2.44771525,13 2,12.5522847 2,12 C2,11.4477153 2.44771525,11 3,11 Z M12,2 C12.5522847,2 13,2.44771525 13,3 L13,5 C13,5.55228475 12.5522847,6 12,6 C11.4477153,6 11,5.55228475 11,5 L11,3 C11,2.44771525 11.4477153,2 12,2 Z M12,18 C12.5522847,18 13,18.4477153 13,19 L13,21 C13,21.5522847 12.5522847,22 12,22 C11.4477153,22 11,21.5522847 11,21 L11,19 C11,18.4477153 11.4477153,18 12,18 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                                                <circle fill="#000000" opacity="0.3" cx="12" cy="12" r="2" />
                                                <path d="M12,17 C14.7614237,17 17,14.7614237 17,12 C17,9.23857625 14.7614237,7 12,7 C9.23857625,7 7,9.23857625 7,12 C7,14.7614237 9.23857625,17 12,17 Z M12,19 C8.13400675,19 5,15.8659932 5,12 C5,8.13400675 8.13400675,5 12,5 C15.8659932,5 19,8.13400675 19,12 C19,15.8659932 15.8659932,19 12,19 Z" fill="#000000" fill-rule="nonzero" />
                                            </g>
                                        </svg><!--end::Svg Icon-->
                                    </span>
                                </button>
                            </div>
                        </div>
                        <span class="form-text text-muted" asp-validation-for="Address"></span>
                    </div>
                    <!--end::Input-->
                    <div id="map" style="height:500px"></div>
                </div>
                <!--end: Wizard Step 1-->
                <!--begin: Wizard Step 2-->
                <div class="pb-5" data-wizard-type="step-content">
                    <h4 class="mb-10 font-weight-bold text-dark">Enter the Details of room</h4>
                    <!--begin::Input-->
                    <div class="form-group">
                        <label asp-for="Name"></label>
                        <textarea asp-for="Name" class="form-control"></textarea>
                        <span class="form-text text-muted" asp-validation-for="Name"></span>
                    </div>
                    <!--end::Input-->
                    <!--begin::Input-->
                    <div class="form-group">
                        <label asp-for="Description"></label>
                        <textarea asp-for="Description" class="form-control"></textarea>
                        <span class="form-text text-muted" asp-validation-for="Description"></span>
                    </div>
                    <!--end::Input-->
                    <!--begin::Input-->
                    <div class="form-group">
                        <label asp-for="CategoryId"></label><br />
                        <select asp-for="CategoryId" class="form-control select2"></select>
                        <span class="form-text text-muted" asp-validation-for="CategoryId"></span>
                    </div>
                    <!--end::Input-->
                </div>
                <!--end: Wizard Step 2-->
                <!--begin: Wizard Step 3-->
                <div class="pb-5" data-wizard-type="step-content">
                    <h4 class="mb-10 font-weight-bold text-dark">Select your Services</h4>

                    <div class="row" id="Amenities">



                    </div>
                </div>
                <!--end: Wizard Step 3-->
                <!--begin: Wizard Step 4-->
                <div class="pb-5" data-wizard-type="step-content">
                    <h4 class="mb-10 font-weight-bold text-dark">Setup Your Delivery Location</h4>
                    <div class="my-5">
                        <div class="row" id="Requirements">
                        </div>
                    </div>
                    <div class="uppy" id="kt_uppy_3">
                        <div class="uppy-drag"></div>
                        <div class="uppy-informer"></div>
                        <div class="uppy-progress"></div>
                        <div class="uppy-thumbnails"></div>
                    </div>
                    <div id="medias">
                        <input type="hidden" name="MediaUrls[]" />
                    </div>
                </div>
                <!--end: Wizard Step 4-->
                <input asp-for="Lng" id="longtitudeInput" type="hidden" />
                <input asp-for="Lat" id="latitudeInput" type="hidden" />
                <!--begin: Wizard Actions-->
                <div class="d-flex justify-content-between border-top mt-5 pt-10">
                    <div class="mr-2">
                        <button type="button" class="btn btn-light-primary font-weight-bolder text-uppercase px-9 py-4" data-wizard-type="action-prev">Previous</button>
                    </div>
                    <div>
                        <button type="button" class="btn btn-success font-weight-bolder text-uppercase px-9 py-4" data-wizard-type="action-submit">Submit</button>
                        <button type="button" class="btn btn-primary font-weight-bolder text-uppercase px-9 py-4" data-wizard-type="action-next">Next</button>
                    </div>
                </div>
                <!--end: Wizard Actions-->
            </form>
            <!--end: Wizard Form-->
        </div>
    </div>
    <!--end: Wizard Body-->
</div>
